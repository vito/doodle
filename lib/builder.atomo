class(Anatomy::Builder < Nokogiri::HTML::Builder):
  attr-reader(#markup)

  define(initialize(options = Hash new, root = nil, &block)):
    @markup = Anatomy::Markup new(self)
    @styles = [Anatomy::Styles::Default]

    @styles each (m):
      @markup extend(m)

    super

  scan(t: Anatomy::AST::Tree) :=
    Anatomy::AST::Tree new(
      t line
      t nodes collect (n): scan(n)
    )

  scan(c: Anatomy::AST::Chunk) := c

  scan(s: Anatomy::AST::Send) := do:
    res = s

    @styles each (x):
      when(x respond-to?(#scan)):
        res =! x scan(@doc, [s message to-sym] + s arguments)

    Anatomy::AST::Send new(
      s line
      res at(0) to-s
      res drop(1) collect (c):
        Anatomy::AST::Node from(c)
    )

  build(t: Anatomy::AST::Tree) :=
    t nodes each (n): build(n)

  build(c: Anatomy::AST::Chunk) :=
    text(c content)

  build(s: Anatomy::AST::Value) :=
    text(s value to-s)

  build(s: Anatomy::AST::Send) :=
    if(@markup respond-to?(s message))
      then: @markup send(s message, *(s arguments))
      else:
        raise(
          NoMethodError new(
            "unknown document message `" + s message +
              "' at line " + s line to-s
            s message
            *(s arguments)
          )
        )

  post-process :=
    @doc tap (d):
      @styles each (s):
        s post-process(d)

  generate(t, flow? = true, &tweaks) := do:
    @doc down each (d):
      Anatomy::Builder with(d) (s):
        s generate(d tree)

    html:
      head:
        title:
          text("Untitled")

      body:
        div content!:
          div section:
            when(tweaks):
              tweaks call(@doc, self)

            build(t)

    when(flow?):
      Anatomy::AutoFlow flow(@doc)

    post-process

  class(<< self):
    define(run(t, flow? = true, &tweaks)):
      b = Anatomy::Builder new

      scanned = b scan(t)

      b generate(scanned, flow?, &tweaks)

    define(run-sanitize(node)):
      sanitize(run-inline(node))

    define(run-strip(node)):
      strip-tags(run-inline(node))

    define(run-inline(node)):
      b = Anatomy::Builder new
      b body: build(node)
      b doc at-css("body") inner-html

    strip-tags(str) :=
      Nokogiri::XML::DocumentFragment parse(str) tap (x):
        x traverse (node):
          when(node is-a?(Nokogiri::XML::Element)):
            node replace(
              Nokogiri::XML::Text new(
                node inner-html
                node document
              )
            )

    sanitize(str) :=
      strip-tags(str) to-html
        gsub(r{\s+}, "-")
        gsub(r{[^[:alnum:]_\-:.]}, "")
        downcase
