module(Anatomy::Styles):
  module(Default):
    : self ; apply(document) := do:
      when(document title):
        document at-css("head title") inner-html =
          Anatomy::Builder strip-tags(Anatomy::Builder run-inline(document title))

      document xpath(".//anatomy_section") each (r):
        sub = document down fetch(r inner-html)
        r replace(section(sub) doc at-css("div"))

    : self ; section(document) :=
      Anatomy::Builder new:
        div section(#(: #id -> "section_" + document tag)):
          h2: build(document title)
          insert(document at-css("body > *"))

    : self ; extend-object(o) :=
      class(<< o):
        title(title, tag = name) := do:
          builder doc title = title
          builder doc tag = Anatomy::Builder run-inline(tag)

          h1: build(title)

        section(title, tag-or-body, body = nil) := do:
          tag = Anatomy::Builder sanitize(
            if(body nil?)
              then: Anatomy::Builder run-inline(title)
              else: Anatomy::Builder run-inline(tag-or-body)
          )

          body ||= tag-or-body

          sub = Anatomy::Builder run(body)
          sub title = title
          sub tag = tag

          sub up = builder doc
          builder doc down at(tag) put(sub)

          anatomy-section: text(tag)

        include-section(path) := do:
          tree = Anatomy::Parser parse-file(path)
          sub = Anatomy::Builder run(tree)

          sub up = builder doc
          builder doc down at(sub tag) put(sub)

          anatomy-section: text(sub tag)
