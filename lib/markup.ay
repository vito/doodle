class(Doodle::Builder):
  _style(s) := do:
    name = string(s)
    style = Doodle::Styles const-get(name)

    unless(self is-a?(style)):
      @styles << style
      extend(style)

  _italic(s) := span(#[style: "font-style: italic"]): build(s)

  alias-method(#_emphasis, #_italic)
  alias-method(#_emph, #_italic)

  _bold(s) := span(#[style: "font-weight: bold"]): build(s)

  _verbatim(s) := pre verbatim: build(s)

  _code(s) :=
    code: build(s)

  _centered(s) :=
    blockquote centered: build(s)

  _smaller(s) :=
    span smaller: build(s)

  _larger(s) :=
    span larger: build(s)

  _list(s) :=
    ul: build(s)

  _item(s) :=
    li: build(s)

  _paragraph(s) :=
    p: build(s)

  _table(*ss) :=
    table:
      body = ss pop

      thead:
        tr:
          ss each (s):
            th: build(s)

      build(body)

  _row(*ss) :=
    tr:
      ss each (n):
        td: build(n)

  _subscript(s) :=
    self sub: build(s)

  _superscript(s) :=
    sup: build(s)

  _linebreak := text("\n")
  _spaces(n) := text(" " * n value)

  _link(name, url) :=
    a(#[href: Doodle::Builder run-inline(url)]):
      build(name)

  _url(url) :=
    link(url, url)

  _margin(s) :=
    div margin-note:
      build(s)
